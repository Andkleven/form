const {
  openBrowser,
  goto,
  textBox,
  press,
  write,
  click,
  closeBrowser,
  waitFor,
  clear,
  focus,
  attach,
  to,
  fileField,
  checkBox
} = require("taiko");

const login = async () => {
  await openBrowser({ headless: false });
  await goto("http://localhost:3000/");
  await press("Tab");
  await write("admin");
  await press("Tab");
  await write("admin");
  await press("Enter");
};

const select = async (option, label, selector) => {
  await click(label, selector);
  await press("Tab");
  await press("Tab");
  await write(option);
  await press("Enter");
};

const writeSelect = async (option, label) => {
  await click(label);
  await press("Tab");
  await press("Tab");
  await write(option);
  await press("Enter");
};

const png = __dirname + "/dummies/dummy.png"
// const jpg = __dirname + "/dummies/dummy.jpg"
// const pdf = __dirname + "/dummies/dummy.pdf"

const description = async (geometry) => {
  await select(geometry, "Geometry");
  await write(`${geometry} Description`, textBox("Description name(Coating)/Material number(Packer)"));
  await select("Report Code - Hours","Additional information");
  await write("Report Code - Hours");

  await attach(
    png,
    to(
      fileField(
        { id: "File Upload" },
        {
          selectHiddenElements: true
        }
      )
    )
  );
  await click("Submit");
  await waitFor(3000)
}

const leadEngineer = async (geometry) => {
  await click("Open all homogenous items");

  // Steel Preparation
  await waitFor(5000);
  await select("Carbon", "Steel");
  await select("Crit", "Blast Media");
  await select("Primer 1", "Primer 1");
  await select("Primer 2", "Primer 2");
  await select("Soap", "Item Rubber Cement Before Coating");
  
  await click("Submit")
  await waitFor(3000)
  
  // Coating and Visualization
  await write("2", textBox("Measurement Points"));
  if ("coatedItem" === geometry) {
    await select("OD", "TDV (Target Description Value)");
    await write("100");
    await press("Enter");
    await write("1");
    await press("Enter");
    await write("100");
    await press("Enter");
    await write("2");    
  }
  await write("10", textBox("Ordered Total Rubber Thickness"));
  await press("Enter");
  await write("0");
  await press("Enter");
  await write("10");
  if ("coatedItem" === geometry) {
    await click("Add Item Rubber Cement")
    await write("10", textBox("Item Rubber Cement"));
  }
  // Step 1
  await select("Hot Air", "Vulcanization Option");
  await write("1337", textBox("Program Number"));
  await write("2", textBox("Number of Layers"));
  await waitFor(50);

  // Layer 1 - Layers need work after adding indexes!
  await select("73165 3mm", "Compound Number");
  await write("4", textBox("Applied Thickness"));
  await write("0", textBox("Shrink"));

  await press("Enter");
  await press("Enter");
  // Layer 2
  await write("73165 3mm");
  await press("Enter");
  await write("6");
  await press("Enter");
  await write("5");

  await click("Submit")
  await waitFor(3000)

  // Final Inspection
  await write("123", textBox("Hardness of Outer Layer"));
  await write("1", textBox("Number of Hardness of Outer Layer"));
  await write("123", textBox("Identification Marking"));
  await write("123", textBox("Peel Test"));
  await write("1", textBox("Number of Peel Test"));
  await checkBox("Spark Test").check();
  await click("Advanced Final Dimensions Check");
  await write("Ref B", textBox("Final Dimensions Reference"));
  await press("Enter");
  await write("10");
  await press("Enter");
  await write("11");
  
  await click("Submit");
  await waitFor(3000)
  
  await click("Back");
  await waitFor(3000)
}

const forLoopField = async (field, number) => {
  for (let i = 0; i < number; i++) {
    await press("Enter");
  await write(field);
  }
}


const create = async (
  projectName = "Test Project",
  descriptionItems = 5,
  geometries = ["mould", "coatedItem"]
) => {
  const items = descriptionItems * geometries.length;
  const itemIndexes = Array.from(Array(items).keys());

  try {
    // Login
    await login();

    // Create Project
    await waitFor("Create new project");
    await click("Create new project");
    await write("projectNumber", textBox("Project Number/PO number"));
    await write(projectName, textBox("Project Name"));
    await write("Client", textBox("Client"));
    await select("Finn Gustavsen", "Project Manager");
    await writeSelect("Project Lead", "Project Lead");
    await writeSelect("Supervising Engineer", "Supervising Engineer");
    await writeSelect("Supervisor", "Supervisor");
    await writeSelect("Quality Control", "Quality Control");
    await write(geometries.length, textBox("Number of Descriptions"));
    await write(items, textBox("Total Number of Items"));
    await click("Submit");
    await waitFor(3000)

    // Description (Coated Item)
    if (geometries.includes("coatedItem")) {
      await description("Coated Item")

      // Add items

      let itemIds1 = [];
      for (const index of itemIndexes) {
        if (index < Math.floor(items / geometries.length)) {
          itemIds1.push(`ItemID${index + 1}`);
        }
      }

      await focus(textBox({ id: "custom-undefined-Item ID-undefined" }));

      for (const itemId of itemIds1) {
        await clear();
        await write(itemId);
        await press("Enter");
      }

      await leadEngineer("coatedItem")

      await click("itemID1")
      await waitFor(1000)
      await click("Edit all")
      await waitFor(3000)
      await checkBox("Media Blasting").check();
      await waitFor(500)
      await click("Submit")
      await waitFor(3000)
      await click("Back")
      await waitFor(3000)
}

      await click("Next");

    // Description (Mould)
    if (geometries.includes("mould")) {
      await description("Mould")

      // Add items
      let itemIds2 = [];
      for (const index of itemIndexes) {
        if (Math.floor(items / geometries.length) <= index) {
          itemIds2.push(`ItemID${index + 1}`);
        }
      }

      await focus(textBox({ id: "custom-undefined-Item ID-undefined" }));

      for (const itemId of itemIds2) {
        await clear();
        await write(itemId);
        await press("Enter");
      }

      await leadEngineer("mould")
      await click("Next");
      await waitFor(1000)


      await click("itemID6")
      await waitFor(1000)
      await click("Edit all")
      await waitFor(3000)
      await checkBox("Media Blasting").check();
      await waitFor(500)
      await click("Submit")
      await waitFor(500)
      await click("Back")
      await waitFor(3000)

    }

    await click("Send to production");
  } catch (error) {
    console.error(error);
  } finally {
    await closeBrowser();
  }
};
const operatorQC = async (geometry, unique=false) => {
  if ("coatedItem" === geometry) {
    // Actual Steel 
    await click("Submit")
    await waitFor(3000)
  }
  
  if (!unique) {
    // Media Blastin
    await write("20", textBox("Relative Humidity"));
    await forLoopField("22", 5)
    await forLoopField("120522222108", 4)
    
    await click("Submit")
    await waitFor(3000)
  }

  if ("coatedItem" === geometry) {
    // Media Blasting Additional Tests
    await write("10", textBox("Soluble Salt Level"));
    await forLoopField("120522222108", 2)
    await forLoopField("55", 2)
    await forLoopField("120522222108", 2)

    await click("Submit")
    await waitFor(3000)
  }

  // Priming 1
  await write("10", textBox("Batch Number"));
  await forLoopField("120522222108", 2)

  await click("Submit")
  await waitFor(3000)

  // Priming 2
  await write("10", textBox("Batch Number"));
  await forLoopField("120522222108", 2)

  await click("Submit")
  await waitFor(3000)

  // Item Rubber Cement Before Coating
  await write("10", textBox("Mix Date"));
  await forLoopField("120522222108", 2)

  await click("Submit")
  await waitFor(3000)

  // coating 1
  await write("12052222", textBox("Mix Date 1"));
  await forLoopField("120522222108", 5)

  await click("Submit")
  await waitFor(3000)
  
  // coating 2
  await write("12052222", textBox("Rubber Thickness"));
  await forLoopField("120522222108", 4)

  await click("Submit")
  await waitFor(3000)

  // Vulcanization
  if (!unique) {
    await checkBox("Ignore Required on Autoclave Number").check();
  } else {
    await write("12052222", textBox("Autoclave Number"));
    await click("enter")
  }
  await write("120522222108", textBox("Start Time"));
  await write("120522222108", textBox("Stop Time"));

  await click("Submit")
  await waitFor(3000)

  // Touch-Up
  await checkBox("Touch-Up").check();
  await write("120522222108", textBox("Touch Up Performed"));

  await click("Submit")
  await waitFor(3000)

  // Final Inspection
  await write("110", textBox("Measurement Point Reference: 1"));
  await write("110", textBox("Measurement Point Reference: 2"));
  await checkBox("Identification Marking").check();
  await write("110", textBox("Hardness Of Outer Layer: 1"));
  await forLoopField("10", 2)

  await click("Submit")
  await waitFor(4000)
  
  await click("Back")
}

const operator = async (
  projectName = "Test Project"
) => {

  try {
    // Login
    await login();

    await click(`projectNumber ∙ ${projectName}`)
    await click("Coated Item Descriotion")
    await click("ItemID2")
    await waitFor(5000)

    await operatorQC("coatedItem")

    await click(`projectNumber ∙ ${projectName}`)
    await click("Coated Item Descriotion")
    await click("ItemID1")
    await waitFor(5000)

    await operatorQC("coatedItem", true)

    await click(`projectNumber ∙ ${projectName}`)
    await click("Mould Descriotion")
    await click("ItemID7")
    await waitFor(5000)

    await operatorQC("mould")

    await click(`projectNumber ∙ ${projectName}`)
    await click("Mould Descriotion")
    await click("ItemID6")
    await waitFor(5000)

    await operatorQC("mould", true)

    


  } catch (error) {
    console.error(error);
  } finally {
    await closeBrowser();
  }
};

write("110", text({label: "Steel Preparation Performed"}))

focus(text({label: "Steel Preparation Performed"}))
exports.create = create;
exports.operator = operator;
